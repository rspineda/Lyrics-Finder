{"version":3,"sources":["components/Header.js","pages/Error404.js","pages/Song.js","components/Finder.js","components/lyric.js","components/AlertDialog.js","components/SongsList.js","components/Loader.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","className","src","logo","alt","Error404","url","useLocation","Alert","severity","style","maxWidth","margin","AlertTitle","pathname","textAlign","to","IconButton","color","useStyles","makeStyles","root","lyrics","whiteSpace","title","marginBottom","media","backgroundSize","height","goHome","justifyContent","Song","mySongs","classes","song","useParams","id","Card","CardActions","Button","size","component","Link","CardMedia","image","avatar","artist","CardContent","Typography","gutterBottom","variant","theme","display","alignItems","spacing","width","Finder","search","setSearch","setError","autoComplete","onSubmit","e","preventDefault","target","value","request","onReset","type","TextField","name","label","onChange","required","addBtn","Lyric","currentSong","setCurrentSong","setMySongs","onClick","AlertDialog","deleteSong","useState","open","setOpen","handleClose","edge","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","flexGrow","demo","backgroundColor","palette","background","paper","alert","fontSize","SongsList","songs","filter","item","index","localStorage","setItem","JSON","stringify","length","List","map","ListItem","key","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","minHeight","transform","Loader","CircularProgress","App","mySongsInit","parse","getItem","error","useEffect","getData","a","artistUrl","songUrl","fetch","artistRes","songRes","json","artistJson","songJson","console","log","artists","strArtist","strArtistThumb","CssBaseline","exact","path","Object","keys","children","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","temaEditado","createMuiTheme","main","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.cbb8eb15.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\n\nconst Header = () => {\n    return (\n        <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Mis canciones</h1>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst Error404 = () => {\n    let url = useLocation();\n\n    return (\n        <>\n            <Alert severity=\"error\" style={{maxWidth:752, margin:'2rem auto 0'}}>\n                <AlertTitle>Error 404</AlertTitle>\n                <p>\n                    Recurso <b><i>{url.pathname}</i></b> no encontrado\n                </p>\n            </Alert>\n            <div style={{margin:'1rem auto', textAlign:'center'}}>\n                <Link to=\"/\">\n                    <IconButton color=\"primary\">\n                        <HomeIcon></HomeIcon>\n                    </IconButton>\n                </Link>\n            </div>\n        </>\n\n    )\n}\n\nexport default Error404;","import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 800,\n      margin: \"2rem auto\"\n    },\n    lyrics: {\n      whiteSpace: \"pre-wrap !important\"\n    },\n    title: {\n      marginBottom: \"3rem !important\"\n    },\n    media: {\n      backgroundSize: \"cover\",\n      height: \"50vh\"\n    },\n    goHome: {\n      justifyContent: \"center\"\n    }\n  });\n\nconst Song = ({mySongs}) => {\n    const classes = useStyles();\n    let {id} = useParams();\n    let song = mySongs[id];\n\n    return (\n        <Card className={classes.root}>\n            <CardActions className={classes.goHome}>\n                <Button size=\"large\" color=\"primary\" component={Link} to=\"/\">\n                <HomeIcon />\n                Home\n                </Button>\n            </CardActions>\n            <CardMedia className={classes.media} image={song.avatar} title={song.artist}></CardMedia>\n            <CardContent>\n                <Typography gutterBottom variant=\"h4\"component=\"h2\" className={classes.title}>\n                    {song.artist} - {song.song}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.lyrics}>\n                    {song.lyrics}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Song;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '&>*':{\n            margin: theme.spacing(0),\n            width: 'auto'\n        }\n    }\n}))\n\n\nconst Finder = ({search, setSearch, setError}) => {\n    const classes = useStyles();\n    const handleSubmit = e => {\n        //alert(\"Enviando\");\n        e.preventDefault();\n        setSearch({\n            artist: e.target.artist.value,\n            song: e.target.song.value,\n            request: true\n        })\n\n    }\n    const handleReset = e => {\n        //alert(\"Reseteando\");\n        setSearch({\n            artist: \"\",\n            song: \"\",\n            request: false\n        });\n\n        setError(false);\n    }\n    \n    return (\n        <form className={classes.root} autoComplete=\"on\"  onSubmit={handleSubmit} onReset={handleReset}>\n            <IconButton color=\"primary\" type=\"reset\">\n                <HomeIcon></HomeIcon>\n            </IconButton>\n            <TextField id=\"artist\" name=\"artist\" label=\"Artista\" variant=\"outlined\" size=\"small\" \n            value={search.artist}\n            onChange={ e => {\n                setSearch({...search, artist: e.target.value, request: false })\n            }}\n            required/>\n            <TextField id=\"song\" name=\"song\" label=\"Canción\" variant=\"outlined\" size=\"small\" \n            value={search.song}\n            onChange={ e => {\n                setSearch({...search, song: e.target.value, request: false })\n            }}\n            required/>\n            <IconButton color=\"primary\" type=\"submit\">\n                <SearchIcon></SearchIcon>\n            </IconButton>\n        </form>\n\n    )\n}\n\nexport default Finder;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 800,\n        margin: \"2rem auto\"\n      },\n      lyrics: {\n        whiteSpace: \"pre-wrap !important\"\n      },\n      title: {\n        marginBottom: \"3rem !important\"\n      },\n      media: {\n        backgroundSize: \"cover\",\n        height: \"50vh\"\n      },\n      addBtn: {\n        justifyContent: \"flex-end\"\n      }\n})\n\nconst Lyric = ({currentSong, setCurrentSong, mySongs, setMySongs, setSearch}) => {\n    \n    const classes = useStyles();\n\n    const handleClick = () => {\n      setMySongs(mySongs => [...mySongs,currentSong]);\n      setSearch({\n        artist: \"\",\n        song: \"\",\n        request: false\n      })\n      setCurrentSong({});\n\n    }\n\n    return (\n       <Card className={classes.root}>\n          <CardMedia className={classes.media} image={currentSong.avatar} title={currentSong.artist}></CardMedia>\n          <CardContent>\n            <Typography\n            gutterBottom\n            variant=\"h4\"\n            component=\"h2\"\n            className={classes.title}>\n            {currentSong.artist} - {currentSong.song}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.lyrics}>\n              {currentSong.lyrics}\n            </Typography>\n          </CardContent>\n          <CardActions className={classes.addBtn}>\n            <Button size=\"small\" color=\"primary\" onClick={handleClick}>Agregar</Button>\n          </CardActions>\n        </Card>\n    )\n}\n\nexport default Lyric; ","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport PanToolIcon from \"@material-ui/icons/PanTool\";\n\nconst AlertDialog = ({ id, deleteSong }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <>\n      <IconButton edge=\"end\" onClick={handleOpen}>\n        <DeleteIcon></DeleteIcon>\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Alerta de Eliminación</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ¿Estás apunto de borrar la canción con el id <b>{id}</b>?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { \n              deleteSong(id);\n              handleClose();\n            }}\n            color=\"primary\"\n          >\n            <DeleteForeverIcon /> SÍ, eliminar\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            <PanToolIcon /> NO, cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AlertDialog;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LaunchIcon from \"@material-ui/icons/Launch\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertDialog from \"./AlertDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n      margin: \"auto\"\n    },\n    demo: {\n      backgroundColor: theme.palette.background.paper\n    },\n    title: {\n      margin: theme.spacing(4, 0, 2)\n    },\n    alert: {\n      fontSize: \"1.5rem\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }));\n\nconst SongsList = ({mySongs, setMySongs})=>{\n    const classes = useStyles();\n\n    const deleteSong = (id) => {\n      let songs = mySongs.filter((item, index)=> index!==id);\n      setMySongs(songs);\n      localStorage.setItem('mySongs', JSON.stringify(songs)); \n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.demo}>\n                {mySongs.length === 0 ? (\n                <Alert severity=\"error\" className={classes.alert}>No tienes canciones almacenadas</Alert>) : (\n                <List>\n                    {mySongs.map((item, index)=> (\n                    <ListItem key={index}>\n                        <ListItemAvatar>\n                            <Avatar alt={item.artist} src={item.avatar}></Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={item.song} secondary={item.artist}></ListItemText>\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" component={Link} to={`/cancion/${index}`}>\n                            <LaunchIcon />\n                          </IconButton>\n                          <AlertDialog id={index} deleteSong={deleteSong}></AlertDialog>\n                        </ListItemSecondaryAction>\n                    </ListItem>))} \n                </List>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default SongsList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"50vh\",\n    transform: \"scale(4)\"\n  }\n}));\n\nconst Loader = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Loader;","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport './App.css';\nimport Header from './components/Header';\nimport Error404 from './pages/Error404';\nimport Song from './pages/Song';\nimport Finder from './components/Finder';\nimport Lyric from './components/lyric';\nimport SongsList from './components/SongsList';\nimport Loader from './components/Loader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n\nfunction App() {\n\n  //cargar canciones desde el localStorage:\n  let mySongsInit = JSON.parse(localStorage.getItem('mySongs')) || [];\n\n  let searchInit = {\n    artist: '',\n    song: '',\n    request: false\n  }\n  //canciones caragadas en el home\n  const [mySongs, setMySongs] = useState(mySongsInit);\n  //busqueda de canciones en el buscador\n  const [search, setSearch] = useState(searchInit);\n  //para manejar la cancion que se estámanipulando en ese momento\n  const [currentSong, setCurrentSong] = useState({});\n  //errores de busqueda\n  const [error, setError] = useState(false);\n\n  useEffect(()=>{\n    localStorage.setItem('mySongs', JSON.stringify(mySongs));\n    const getData = async () => {\n      const {artist, song} = search;\n      try{\n        let artistUrl = `https://theaudiodb.com/api/v1/json/1/search.php?s=${artist}`;\n        let songUrl = `https://api.lyrics.ovh/v1/${artist}/${song}`;\n        let artistRes = await fetch(artistUrl);\n        let songRes = await fetch(songUrl);\n        let artistJson = await artistRes.json();\n        let songJson = await songRes.json(); \n\n        console.log('el Json del artista',artistJson);\n        console.log('el Json de la cancion',songJson);\n\n        setCurrentSong({\n          artist: artistJson.artists[0].strArtist,\n          avatar: artistJson.artists[0].strArtistThumb,\n          song: song,\n          lyrics: songJson.lyrics\n        })\n\n      }catch(error){\n        console.log(error)\n        setSearch({\n          artist: artist,\n          song: song,\n          request: false\n        });\n        setError(true);\n      }\n    }\n    if(!search.request){ //si la petición no se hace devuelvo un efecto vacío para que no se ejecute mas veces\n      return;\n    }else{\n      getData();\n    }\n  }, [search]);\n\n  return (\n    <Router>\n      <CssBaseline>\n        <div className=\"App\">\n          <Header></Header>\n          <main className=\"App-main\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Finder search={search} setSearch={setSearch} setError={setError}></Finder>\n                {(!search.request)? (error?(\n                <Alert severity=\"error\" style={{maxWidth: 752, margin: \"2rem auto 0\"}}>\n                  <AlertTitle>Error</AlertTitle>\n                  Error al consultar la petición:\n                  <ul>\n                    <li>El artista: <b>{search.artist}</b> o</li>\n                    <li>La canción <b>{search.song}</b></li>\n                  </ul>\n                </Alert>): <SongsList mySongs={mySongs} setMySongs={setMySongs}></SongsList>) : ( Object.keys(currentSong).length === 0 ? (<Loader></Loader>) : (\n                  <Lyric currentSong={currentSong} setCurrentSong={setCurrentSong} mySongs={mySongs} setMySongs={setMySongs} setSearch={setSearch}></Lyric>)\n                )}\n              </Route>\n              <Route path=\"/cancion/:id\" children={<Song mySongs={mySongs}></Song>}></Route>\n              <Route path=\"*\" component={Error404}></Route>\n            </Switch>\n\n          </main>\n        </div>\n      </CssBaseline>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n//para cambiar el color primary de MaterialUI\nconst temaEditado= createMuiTheme({\n  palette: {\n    primary: {\n      main: '#61DAFB'\n    }\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={temaEditado}>\n      <App />\n    </ThemeProvider>   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}